/*
 * Copyright 2008-2009 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package egovframework.example.sample.service;

import java.util.List;

/**
 * @Class Name : EgovSampleService.java
 * @Description : EgovSampleService Class
 * @Modification Information
 * @ @ 수정일 수정자 수정내용 @ --------- --------- ------------------------------- @
 *   2009.03.16 최초생성
 *
 * @author 개발프레임웍크 실행환경 개발팀
 * @since 2009. 03.16
 * @version 1.0
 * @see
 *
 * 		Copyright (C) by MOPAS All right reserved.
 */
public interface PostService {

	/**
	 * 
	 * @param post
	 * @param user
	 * @return
	 * @throws Exception
	 */
    String createPost(PostVO post, UserVO user) throws Exception;
    
    /**
     * 
     * @param postId
     * @return
     * @throws Exception
     */
    PostVO getPost(String postId) throws Exception;
    
    /**
     * 
     * @param searchVO
     * @return
     * @throws Exception
     */
    List<?> getAllPosts(SampleDefaultVO searchVO) throws Exception;
    
    /**
     * 
     * @param post
     * @param user
     * @return
     * @throws Exception
     */
    boolean updatePost(PostVO post, UserVO user) throws Exception;
    
    /**
     * 
     * @param postId
     * @param user
     * @return
     * @throws Exception
     */
    boolean deletePost(String postId, UserVO user) throws Exception;
    
    /**
     * 
     * @param searchVO
     * @return
     * @throws Exception
     */
    int selectPostListTotCnt(SampleDefaultVO searchVO) throws Exception; // 추가된 메서드
    
    // 댓글 관련
    /**
     * 
     * @param comment
     * @param user
     * @return
     * @throws Exception
     */
    String addComment(CommentVO comment, UserVO user) throws Exception;
    /**
     * 
     * @param comment
     * @param user
     * @return
     * @throws Exception
     */
    boolean updateComment(CommentVO comment, UserVO user) throws Exception;
    
    /**
     * 
     * @param commentId
     * @param user
     * @return
     * @throws Exception
     */
    boolean deleteComment(String commentId, UserVO user) throws Exception;
    
    /**
     * 
     * @param postId
     * @return
     * @throws Exception
     */
    List<CommentVO> getCommentsByPostId(String postId) throws Exception;
    
    // 사용자 인증 관련
    /**
     * 
     * @param user
     * @return
     * @throws Exception
     */
    boolean validateUser(UserVO user) throws Exception;
	
	
}
