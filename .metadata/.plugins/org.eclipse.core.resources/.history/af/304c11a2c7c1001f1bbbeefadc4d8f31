/*
 * Copyright 2008-2009 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package egovframework.example.sample.service.impl;

import java.util.List;

import egovframework.example.sample.service.SampleDefaultVO;
import egovframework.example.sample.service.PostVO;

import egovframework.rte.psl.dataaccess.EgovAbstractDAO;

import org.springframework.stereotype.Repository;

/**
 * @Class Name : SampleDAO.java
 * @Description : Sample DAO Class
 * @Modification Information
 * @
 * @  수정일      수정자              수정내용
 * @ ---------   ---------   -------------------------------
 * @ 2009.03.16           최초생성
 *
 * @author 개발프레임웍크 실행환경 개발팀
 * @since 2009. 03.16
 * @version 1.0
 * @see
 *
 *  Copyright (C) by MOPAS All right reserved.
 */

@Repository("sampleDAO")
public class PostDAO extends EgovAbstractDAO {
    // 게시글 관련 메서드
    public String insertPost(PostVO vo) throws Exception {
        return (String) insert("anonymousBoardDAO.insertPost", vo);
    }
    
    public PostVO selectPost(String postId) throws Exception {
        return (PostVO) select("anonymousBoardDAO.selectPost", postId);
    }
    
    public List<?> selectPostList(SampleDefaultVO searchVO) throws Exception {
        return list("anonymousBoardDAO.selectPostList", searchVO);
    }
    
    public int selectPostListTotCnt(SampleDefaultVO searchVO) throws Exception {
        return (Integer) select("anonymousBoardDAO.selectPostListTotCnt", searchVO);
    }
    
    public int updatePost(PostVO vo) throws Exception {
        return update("anonymousBoardDAO.updatePost", vo);
    }
    
    public int deletePost(String postId) throws Exception {
        // 게시글 삭제 시 관련 댓글도 모두 삭제
        delete("anonymousBoardDAO.deleteCommentsByPostId", postId);
        return delete("anonymousBoardDAO.deletePost", postId);
    }
    
    // 댓글 관련 메서드
    public String insertComment(CommentVO vo) throws Exception {
        return (String) insert("anonymousBoardDAO.insertComment", vo);
    }
    
    public CommentVO selectComment(String commentId) throws Exception {
        return (CommentVO) select("anonymousBoardDAO.selectComment", commentId);
    }
    
    public List<CommentVO> selectCommentsByPostId(String postId) throws Exception {
        return list("anonymousBoardDAO.selectCommentsByPostId", postId);
    }
    
    public int updateComment(CommentVO vo) throws Exception {
        return update("anonymousBoardDAO.updateComment", vo);
    }
    
    public int deleteComment(String commentId) throws Exception {
        return delete("anonymousBoardDAO.deleteComment", commentId);
    }
    
    public int deleteCommentsByPostId(String postId) throws Exception {
        return delete("anonymousBoardDAO.deleteCommentsByPostId", postId);
    }
    
    // 사용자 관련 메서드
    public UserVO selectUser(String userId) throws Exception {
        return (UserVO) select("anonymousBoardDAO.selectUser", userId);
    }
    
    public int insertUser(UserVO vo) throws Exception {
        return (Integer) insert("anonymousBoardDAO.insertUser", vo);
    }

}
